{"ast":null,"code":"var _jsxFileName = \"D:\\\\Docs\\\\Programing Projects\\\\snowline-route-manager\\\\client\\\\src\\\\components\\\\RouteSelector.js\";\nimport React from \"react\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Button from \"react-bootstrap/Button\";\nimport Can from \"../components/Can\";\nimport { AuthConsumer } from \"../authContext\";\nimport { connect } from \"react-redux\";\nimport { Component } from \"react\";\nimport { setActiveRoute } from \"../actions\";\n\nconst mapStateToProps = state => {\n  return {\n    activeRoute: state.setActiveRoute.activeRoute\n  };\n};\n\nconst mapDispatchToProps = dispatch => {};\n\nconst editStyle = {\n  float: \"right\"\n}; //in the future this would pull from the routes tables\n\nconst routes = [\"marybelle\", \"clementine\", \"bessy\"];\n\nconst handleRouteSelect = eventKey => {\n  return console.log(eventKey);\n};\n\nconst renderRoute = routeName => {\n  return React.createElement(AuthConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, ({\n    authenticated\n  }) => authenticated ? React.createElement(AuthConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, ({\n    user\n  }) => React.createElement(Can, {\n    role: user.role,\n    perform: \"admin:visit\",\n    yes: () => React.createElement(Dropdown.Item, {\n      eventKey: routeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, routeName, React.createElement(Button, {\n      size: \"sm\",\n      variant: \"secondary\",\n      style: editStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Edit\")),\n    no: () => React.createElement(Dropdown.Item, {\n      eventKey: routeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, routeName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n};\n\nclass RouteSelector extends Component {\n  render() {\n    return React.createElement(DropdownButton, {\n      title: \"Select Route\",\n      onSelect: function (evt) {\n        console.log(evt);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      href: \"#/action-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Make New Route\"), routes.map(route => renderRoute(route)));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RouteSelector);","map":{"version":3,"sources":["D:\\Docs\\Programing Projects\\snowline-route-manager\\client\\src\\components\\RouteSelector.js"],"names":["React","DropdownButton","Dropdown","Button","Can","AuthConsumer","connect","Component","setActiveRoute","mapStateToProps","state","activeRoute","mapDispatchToProps","dispatch","editStyle","float","routes","handleRouteSelect","eventKey","console","log","renderRoute","routeName","authenticated","user","role","RouteSelector","render","evt","map","route"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACF,cAAN,CAAqBG;AAD/B,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc,CAExC,CAFD;;AAIA,MAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE;AADO,CAAlB,C,CAGA;;AACA,MAAMC,MAAM,GAAG,CACX,WADW,EAEX,YAFW,EAGX,OAHW,CAAf;;AAMA,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;AACpC,SACIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CADJ;AAGH,CAJD;;AAKA,MAAMG,WAAW,GAAIC,SAAD,IAAe;AAE/B,SACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACDA,aAAa,GACT,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACG,oBAAC,GAAD;AACI,IAAA,IAAI,EAAEA,IAAI,CAACC,IADf;AAEI,IAAA,OAAO,EAAC,aAFZ;AAGI,IAAA,GAAG,EAAE,MACD,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,QAAQ,EAAEH,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,SADL,EAEI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,OAAO,EAAC,WAA1B;AAAsC,MAAA,KAAK,EAAER,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAJR;AASI,IAAA,EAAE,EAAE,MAAM,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,QAAQ,EAAEQ,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCA,SAArC,CATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADS,GAiBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBR,CADJ;AAyBH,CA3BD;;AA4BA,MAAMI,aAAN,SAA4BnB,SAA5B,CAAsC;AAElCoB,EAAAA,MAAM,GAAI;AACN,WACI,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAC,cAAtB;AAAqC,MAAA,QAAQ,EAAE,UAASC,GAAT,EAAa;AAACT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AAAiB,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAGQZ,MAAM,CAACa,GAAP,CAAWC,KAAK,IAAIT,WAAW,CAACS,KAAD,CAA/B,CAHR,CADJ;AAQH;;AAXiC;;AAkBtC,eAAexB,OAAO,CAACG,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cc,aAA7C,CAAf","sourcesContent":["import React from \"react\"\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\"\r\nimport Dropdown from \"react-bootstrap/Dropdown\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport Can from \"../components/Can\"\r\nimport { AuthConsumer } from \"../authContext\";\r\nimport { connect } from \"react-redux\"\r\nimport { Component } from \"react\"\r\nimport { setActiveRoute } from \"../actions\" \r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeRoute: state.setActiveRoute.activeRoute\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n}\r\n\r\nconst editStyle = {\r\n    float: \"right\"\r\n}\r\n//in the future this would pull from the routes tables\r\nconst routes = [\r\n    \"marybelle\",\r\n    \"clementine\",\r\n    \"bessy\"\r\n]\r\n\r\nconst handleRouteSelect = (eventKey) => {\r\n    return(\r\n        console.log(eventKey)\r\n    )\r\n}\r\nconst renderRoute = (routeName) => {\r\n    \r\n    return (\r\n        <AuthConsumer>\r\n            {({ authenticated }) =>\r\n            authenticated ? (\r\n                <AuthConsumer>\r\n                {({ user }) => (\r\n                    <Can\r\n                        role={user.role}\r\n                        perform=\"admin:visit\"\r\n                        yes={() => (\r\n                            <Dropdown.Item eventKey={routeName}>\r\n                                {routeName}\r\n                                <Button size=\"sm\" variant=\"secondary\" style={editStyle}>Edit</Button>\r\n                            </Dropdown.Item>\r\n                        )}\r\n                        no={() => <Dropdown.Item eventKey={routeName}>{routeName}</Dropdown.Item>}               \r\n                    />                            \r\n                )}\r\n                </AuthConsumer>\r\n            ) : (\r\n                <div></div>\r\n            )\r\n            }\r\n        </AuthConsumer>           \r\n    ) \r\n}\r\nclass RouteSelector extends Component {\r\n\r\n    render () {\r\n        return (        \r\n            <DropdownButton title=\"Select Route\" onSelect={function(evt){console.log(evt)}}>         \r\n                <Dropdown.Item href=\"#/action-1\">Make New Route</Dropdown.Item>\r\n                {\r\n                    routes.map(route => renderRoute(route))\r\n                }  \r\n            </DropdownButton>\r\n        )\r\n    }\r\n\r\n    \r\n \r\n    \r\n}\r\n    \r\nexport default connect(mapStateToProps, mapDispatchToProps)(RouteSelector)"]},"metadata":{},"sourceType":"module"}