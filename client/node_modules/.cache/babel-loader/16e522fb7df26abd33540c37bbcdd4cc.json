{"ast":null,"code":"var _jsxFileName = \"D:\\\\Docs\\\\Programing Projects\\\\snowline-route-manager\\\\src\\\\components\\\\RouteSelector.js\";\nimport React from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Button from \"react-bootstrap/Button\";\nimport Can from \"../components/Can\";\nimport { AuthConsumer } from \"../authContext\";\n\nconst RouteSelector = () => {\n  //in the future this would pull from the routes tables\n  const routes = [\"marybelle\", \"clementine\", \"bessy\"];\n\n  const renderRoute = routeName => {\n    return React.createElement(AuthConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, ({\n      authenticated\n    }) => authenticated ? React.createElement(AuthConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, ({\n      user\n    }) => React.createElement(Can, {\n      role: user.role,\n      perform: \"admin:visit\",\n      yes: () => React.createElement(Dropdown.Item, {\n        href: \"#/action-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, routeName, React.createElement(Button, {\n        variant: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Edit\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })) : React.createElement(Dropdown.Item, {\n      href: \"#/action-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"hi\", routeName));\n  };\n\n  return React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: \"success\",\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Select Route\"), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    href: \"#/action-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Make New Route\"), routes.map(route => renderRoute(route))));\n};\n\nexport default RouteSelector;","map":{"version":3,"sources":["D:\\Docs\\Programing Projects\\snowline-route-manager\\src\\components\\RouteSelector.js"],"names":["React","Dropdown","Button","Can","AuthConsumer","RouteSelector","routes","renderRoute","routeName","authenticated","user","role","map","route"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAExB;AACA,QAAMC,MAAM,GAAG,CACX,WADW,EAEX,YAFW,EAGX,OAHW,CAAf;;AAMA,QAAMC,WAAW,GAAIC,SAAD,IAAe;AAE/B,WACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAAEC,MAAAA;AAAF,KAAD,KACDA,aAAa,GACT,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,CAAC;AAAEC,MAAAA;AAAF,KAAD,KACG,oBAAC,GAAD;AACI,MAAA,IAAI,EAAEA,IAAI,CAACC,IADf;AAEI,MAAA,OAAO,EAAC,aAFZ;AAGI,MAAA,GAAG,EAAE,MACD,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,SADL,EAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADS,GAgBT,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAoCA,SAApC,CAlBR,CADJ;AAwBH,GA1BD;;AA4BA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD,CAAU,MAAV;AAAiB,IAAA,OAAO,EAAC,SAAzB;AAAmC,IAAA,EAAE,EAAC,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAII,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAGQF,MAAM,CAACM,GAAP,CAAWC,KAAK,IAAIN,WAAW,CAACM,KAAD,CAA/B,CAHR,CAJJ,CADJ;AAaH,CAlDD;;AAoDA,eAAeR,aAAf","sourcesContent":["import React from \"react\"\r\nimport Dropdown from \"react-bootstrap/Dropdown\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport Can from \"../components/Can\"\r\nimport { AuthConsumer } from \"../authContext\";\r\n\r\nconst RouteSelector = () => {\r\n\r\n    //in the future this would pull from the routes tables\r\n    const routes = [\r\n        \"marybelle\",\r\n        \"clementine\",\r\n        \"bessy\"\r\n    ]\r\n\r\n    const renderRoute = (routeName) => {\r\n        \r\n        return (\r\n            <AuthConsumer>\r\n                {({ authenticated }) =>\r\n                authenticated ? (\r\n                    <AuthConsumer>\r\n                    {({ user }) => (\r\n                        <Can\r\n                            role={user.role}\r\n                            perform=\"admin:visit\"\r\n                            yes={() => (\r\n                                <Dropdown.Item href=\"#/action-2\">\r\n                                    {routeName}\r\n                                    <Button variant=\"secondary\">Edit</Button>\r\n                                </Dropdown.Item>\r\n                            )}               \r\n                        />     \r\n                    )}\r\n                    </AuthConsumer>\r\n                ) : (\r\n                    <Dropdown.Item href=\"#/action-2\">hi{routeName}</Dropdown.Item>\r\n                )\r\n                }\r\n            </AuthConsumer>           \r\n        ) \r\n    }\r\n\r\n    return (        \r\n        <Dropdown>\r\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                Select Route\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n                <Dropdown.Item href=\"#/action-1\">Make New Route</Dropdown.Item>\r\n                {\r\n                    routes.map(route => renderRoute(route))\r\n                }\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    )\r\n}\r\n    \r\nexport default RouteSelector"]},"metadata":{},"sourceType":"module"}