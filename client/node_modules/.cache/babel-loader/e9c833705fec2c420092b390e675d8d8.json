{"ast":null,"code":"import _defineProperty from \"D:\\\\Docs\\\\Programing Projects\\\\snowline-route-manager\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_ACTIVE_ROUTE } from './constants.js';\nconst initialState = {\n  activeRoute: ''\n};\nexport const setActiveRoute = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case SET_ACTIVE_ROUTE:\n      return _objectSpread({}, state, {\n        activeRoute: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:\\Docs\\Programing Projects\\snowline-route-manager\\client\\src\\reducers.js"],"names":["SET_ACTIVE_ROUTE","initialState","activeRoute","setActiveRoute","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,gBAAT,QAAiC,gBAAjC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AADI,CAArB;AAIA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAACH,YAAP,EAAqBI,MAAM,GAAC,EAA5B,KAAmC;AAC7D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,gBAAL;AACI,+BAAWI,KAAX;AAAkBF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAAtC;;AACJ;AACI,aAAOH,KAAP;AAJR;AAOH,CARM","sourcesContent":["import { SET_ACTIVE_ROUTE } from './constants.js'\r\n\r\nconst initialState = {\r\n    activeRoute: '' \r\n}\r\n\r\nexport const setActiveRoute = (state=initialState, action={}) => {\r\n    switch(action.type) {\r\n        case SET_ACTIVE_ROUTE:\r\n            return {...state, activeRoute: action.payload }\r\n        default:    \r\n            return state\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}