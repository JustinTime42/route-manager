{"ast":null,"code":"var _jsxFileName = \"D:\\\\Docs\\\\Programing Projects\\\\snowline-route-manager\\\\client\\\\src\\\\components\\\\RouteSelector.js\";\nimport React from \"react\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Button from \"react-bootstrap/Button\";\nimport Can from \"../components/Can\";\nimport { AuthConsumer } from \"../authContext\";\nimport { connect } from \"react-redux\";\nimport { setActiveRoute } from \"../actions\";\n\nconst RouteSelector = () => {\n  const mapStateToProps = state => {\n    return {\n      activeRoute: state.setActiveRoute.activeRoute\n    };\n  };\n\n  const mapDispatchToProps = dispatch => {};\n\n  const editStyle = {\n    float: \"right\"\n  }; //in the future this would pull from the routes tables\n\n  const routes = [\"marybelle\", \"clementine\", \"bessy\"];\n\n  const handleRouteSelect = eventKey => {\n    return console.log(eventKey);\n  };\n\n  const renderRoute = routeName => {\n    return React.createElement(AuthConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, ({\n      authenticated\n    }) => authenticated ? React.createElement(AuthConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, ({\n      user\n    }) => React.createElement(Can, {\n      role: user.role,\n      perform: \"admin:visit\",\n      yes: () => React.createElement(Dropdown.Item, {\n        eventKey: routeName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, routeName, React.createElement(Button, {\n        size: \"sm\",\n        variant: \"secondary\",\n        style: editStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Edit\")),\n      no: () => React.createElement(Dropdown.Item, {\n        eventKey: routeName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, routeName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(DropdownButton, {\n    title: \"Select Route\",\n    onSelect: function (evt) {\n      console.log(evt);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    href: \"#/action-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Make New Route\"), routes.map(route => renderRoute(route)));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RouteSelector);","map":{"version":3,"sources":["D:\\Docs\\Programing Projects\\snowline-route-manager\\client\\src\\components\\RouteSelector.js"],"names":["React","DropdownButton","Dropdown","Button","Can","AuthConsumer","connect","setActiveRoute","RouteSelector","mapStateToProps","state","activeRoute","mapDispatchToProps","dispatch","editStyle","float","routes","handleRouteSelect","eventKey","console","log","renderRoute","routeName","authenticated","user","role","evt","map","route"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,YAA/B;;AACA,MAAMC,aAAa,GAAG,MAAM;AAExB,QAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,WAAO;AACHC,MAAAA,WAAW,EAAED,KAAK,CAACH,cAAN,CAAqBI;AAD/B,KAAP;AAGH,GAJD;;AAMA,QAAMC,kBAAkB,GAAIC,QAAD,IAAc,CAExC,CAFD;;AAIA,QAAMC,SAAS,GAAG;AACdC,IAAAA,KAAK,EAAE;AADO,GAAlB,CAZwB,CAexB;;AACA,QAAMC,MAAM,GAAG,CACX,WADW,EAEX,YAFW,EAGX,OAHW,CAAf;;AAMA,QAAMC,iBAAiB,GAAIC,QAAD,IAAc;AACpC,WACIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CADJ;AAGH,GAJD;;AAKA,QAAMG,WAAW,GAAIC,SAAD,IAAe;AAE/B,WACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAAEC,MAAAA;AAAF,KAAD,KACDA,aAAa,GACT,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,CAAC;AAAEC,MAAAA;AAAF,KAAD,KACG,oBAAC,GAAD;AACI,MAAA,IAAI,EAAEA,IAAI,CAACC,IADf;AAEI,MAAA,OAAO,EAAC,aAFZ;AAGI,MAAA,GAAG,EAAE,MACD,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,QAAQ,EAAEH,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,SADL,EAEI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,OAAO,EAAC,WAA1B;AAAsC,QAAA,KAAK,EAAER,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CAJR;AASI,MAAA,EAAE,EAAE,MAAM,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,QAAQ,EAAEQ,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCA,SAArC,CATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADS,GAiBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBR,CADJ;AAyBH,GA3BD;;AA6BA,SACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,cAAtB;AAAqC,IAAA,QAAQ,EAAE,UAASI,GAAT,EAAa;AAACP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AAAiB,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAGQV,MAAM,CAACW,GAAP,CAAWC,KAAK,IAAIP,WAAW,CAACO,KAAD,CAA/B,CAHR,CADJ;AAQH,CAhED;;AAkEA,eAAetB,OAAO,CAACG,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CJ,aAA7C,CAAf","sourcesContent":["import React from \"react\"\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\"\r\nimport Dropdown from \"react-bootstrap/Dropdown\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport Can from \"../components/Can\"\r\nimport { AuthConsumer } from \"../authContext\";\r\nimport { connect } from \"react-redux\"\r\nimport { setActiveRoute } from \"../actions\" \r\nconst RouteSelector = () => {\r\n\r\n    const mapStateToProps = state => {\r\n        return {\r\n            activeRoute: state.setActiveRoute.activeRoute\r\n        }\r\n    }\r\n    \r\n    const mapDispatchToProps = (dispatch) => {\r\n    \r\n    }\r\n\r\n    const editStyle = {\r\n        float: \"right\"\r\n    }\r\n    //in the future this would pull from the routes tables\r\n    const routes = [\r\n        \"marybelle\",\r\n        \"clementine\",\r\n        \"bessy\"\r\n    ]\r\n\r\n    const handleRouteSelect = (eventKey) => {\r\n        return(\r\n            console.log(eventKey)\r\n        )\r\n    }\r\n    const renderRoute = (routeName) => {\r\n        \r\n        return (\r\n            <AuthConsumer>\r\n                {({ authenticated }) =>\r\n                authenticated ? (\r\n                    <AuthConsumer>\r\n                    {({ user }) => (\r\n                        <Can\r\n                            role={user.role}\r\n                            perform=\"admin:visit\"\r\n                            yes={() => (\r\n                                <Dropdown.Item eventKey={routeName}>\r\n                                    {routeName}\r\n                                    <Button size=\"sm\" variant=\"secondary\" style={editStyle}>Edit</Button>\r\n                                </Dropdown.Item>\r\n                            )}\r\n                            no={() => <Dropdown.Item eventKey={routeName}>{routeName}</Dropdown.Item>}               \r\n                        />                            \r\n                    )}\r\n                    </AuthConsumer>\r\n                ) : (\r\n                    <div></div>\r\n                )\r\n                }\r\n            </AuthConsumer>           \r\n        ) \r\n    }\r\n \r\n    return (        \r\n        <DropdownButton title=\"Select Route\" onSelect={function(evt){console.log(evt)}}>         \r\n            <Dropdown.Item href=\"#/action-1\">Make New Route</Dropdown.Item>\r\n            {\r\n                routes.map(route => renderRoute(route))\r\n            }  \r\n        </DropdownButton>\r\n    )\r\n}\r\n    \r\nexport default connect(mapStateToProps, mapDispatchToProps)(RouteSelector)"]},"metadata":{},"sourceType":"module"}