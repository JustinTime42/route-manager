{"ast":null,"code":"var _jsxFileName = \"D:\\\\Docs\\\\Programing Projects\\\\snowline-route-manager\\\\client\\\\src\\\\index.js\";\n// src/index.js\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider, connect } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport App from './containers/App';\nimport thunkMiddleWare from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { setActiveRoute, requestRoutes } from './reducers';\nconst logger = createLogger();\nconst rootReducer = combineReducers({\n  setActiveRoute,\n  requestRoutes\n});\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleWare, logger));\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n})), rootElement);\nserviceWorker.unregister();","map":{"version":3,"sources":["D:\\Docs\\Programing Projects\\snowline-route-manager\\client\\src\\index.js"],"names":["React","ReactDOM","serviceWorker","Provider","connect","createStore","applyMiddleware","combineReducers","App","thunkMiddleWare","createLogger","setActiveRoute","requestRoutes","logger","rootReducer","store","rootElement","document","getElementById","render","unregister"],"mappings":";AAAA;AACA,OAAO,sCAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,YAA9C;AAEA,MAAMC,MAAM,GAAGH,YAAY,EAA3B;AACA,MAAMI,WAAW,GAAGP,eAAe,CAAE;AAAEI,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAF,CAAnC;AACA,MAAMG,KAAK,GAAGV,WAAW,CAACS,WAAD,EAAcR,eAAe,CAACG,eAAD,EAAkBI,MAAlB,CAA7B,CAAzB;AACA,MAAMG,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AAEAjB,QAAQ,CAACkB,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAGeC,WAHf;AAKAd,aAAa,CAACkB,UAAd","sourcesContent":["// src/index.js\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider, connect } from 'react-redux'\nimport { createStore, applyMiddleware, combineReducers } from 'redux'\nimport App from './containers/App'\nimport thunkMiddleWare from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport { setActiveRoute, requestRoutes } from './reducers';\n\nconst logger = createLogger()\nconst rootReducer = combineReducers( { setActiveRoute, requestRoutes })\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleWare, logger))\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>, rootElement);\n\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}